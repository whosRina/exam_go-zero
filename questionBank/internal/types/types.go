// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

import (
	"time"
)

type CreateBankRequest struct {
	BankName string `json:"BankName"`
}

type CreateBankResponse struct {
	Message string `json:"Message"`
}

type CreateQuestionRequest struct {
	BankId  int    `json:"bankId"`  // 题库ID
	Content string `json:"content"` // 题目内容
	Type    int    `json:"type"`    // 题型 (1=单选，2=多选，3=判断，4=简答)
	Options string `json:"options"` // 可选项（JSON格式）
	Answer  string `json:"answer"`  // 正确答案（JSON格式）
}

type CreateQuestionResponse struct {
	Message string `json:"message"` // 响应消息
}

type QuestionBankInfo struct {
	Id        int       `json:"id"`
	Name      string    `json:"name"`
	CreatedBy int       `json:"createdBy"`
	CreatedAt time.Time `json:"createdAt"`
}

type QuestionBankListResponse struct {
	BankList []QuestionBankInfo `json:"bankList"`
}

type UpdateBankRequest struct {
	Id   int    `json:"id"`
	Name string `json:"name"`
}
type UpdateBankResponse struct {
	Message string `json:"message"`
}

type DeleteBankRequest struct {
	Id int `json:"id"`
}
type DeleteBankResponse struct {
	Message string `json:"message"`
}
type BankDetailRequest struct {
	Id int `json:"id"`
}

// BankDetailResponse
type BankDetailResponse struct {
	BankInfo   BankInfo             `json:"bankInfo"`   // 题库详细信息
	TypeCounts []*QuestionTypeCount `json:"typeCounts"` // 题目类型数量
}

// BankInfo
type BankInfo struct {
	ID          int64     `json:"id"`          // 题库ID
	Name        string    `json:"name"`        // 题库名称
	CreatedAt   time.Time `json:"createdAt"`   // 创建时间
	CreatorName string    `json:"creatorName"` // 创建者名称
}

// QuestionTypeCount
type QuestionTypeCount struct {
	Type  string `json:"type"`  // 题目类型
	Count int    `json:"count"` // 题目数量
}

// QuestionListRequest 定义请求体的结构
type QuestionListRequest struct {
	BankId int64 `json:"bankId"` // 题库ID
	Type   int64 `json:"type"`   // 题目类型 (1=单选, 2=多选, 3=判断, 4=简答)
	Page   int   `json:"page"`   // 当前页码
	Size   int   `json:"size"`   // 每页显示的题目数量
}
type Question struct {
	Id        int64     `json:"id" db:"id"`                // 题目ID
	BankId    int64     `json:"bankId" db:"bank_id"`       // 题库ID（关联question_bank表）
	Content   string    `json:"content" db:"content"`      // 题目内容
	Type      int64     `json:"type" db:"type"`            // 题型 (1=单选，2=多选，3=判断，4=简答)
	Options   string    `json:"options" db:"options"`      // 可选项（存储JSON格式）
	Answer    string    `json:"answer" db:"answer"`        // 正确答案（存储JSON格式）
	CreatedBy int64     `json:"createdBy" db:"created_by"` // 创建者ID（关联user表）
	CreatedAt time.Time `json:"createdAt" db:"created_at"` // 创建时间
}

// QuestionListResponse 定义响应体的结构
type QuestionListResponse struct {
	Total     int64       `json:"total"`     // 总题目数量
	Page      int         `json:"page"`      // 当前页码
	Size      int         `json:"size"`      // 每页显示的题目数量
	Questions []*Question `json:"questions"` // 题目列表
}

// DeleteQuestionRequest 定义删除题目的请求结构
type DeleteQuestionRequest struct {
	QuestionId int64 `json:"id"` // 题目ID
}
type DeleteQuestionResponse struct {
	Message string `json:"message"`
}

type UpdateQuestionRequest struct {
	QuestionId int    `json:"questionId"` // 题目ID
	Content    string `json:"content"`    // 题目内容
	Type       int    `json:"type"`       // 题型 (1=单选，2=多选，3=判断，4=简答)
	Options    string `json:"options"`    // 可选项（JSON格式）
	Answer     string `json:"answer"`     // 正确答案（JSON格式）
}

type UpdateQuestionResponse struct {
	Message string `json:"message"` // 响应消息
}

// ParseWordRequest 解析 Base64 方式上传的 Word 题目
type ParseWordRequest struct {
	BankId     int64  `json:"bankId"`     // 题库ID
	FileBase64 string `json:"fileBase64"` // Base64编码的Word文件
}

// ParseWordResponse 解析结果
type FailedItem struct {
	Index   int    `json:"index"`   // 失败题目的索引
	Content string `json:"content"` // 失败题目的前50个字符
}

type ParseWordResponse struct {
	Message      string       `json:"message"`      // 结果消息
	TotalCount   int          `json:"totalCount"`   // 总题目数量
	SuccessCount int          `json:"successCount"` // 成功导入的题目数量
	FailCount    int          `json:"failCount"`    // 失败题目数量
	FailedItems  []FailedItem `json:"failedItems"`  // 失败题目详情（索引+前50字符）
}
